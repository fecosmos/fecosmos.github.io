1:"$Sreact.fragment"
3:I[1374,[],""]
4:I[1060,[],""]
5:I[5834,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"TOCProvider"]
6:I[4095,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"Sidebar"]
7:I[4467,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"ClientWrapper"]
8:I[4721,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"HeadingAnchor"]
9:I[6090,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"Details"]
a:I[9718,[],"OutletBoundary"]
d:I[9718,[],"ViewportBoundary"]
f:I[9718,[],"MetadataBoundary"]
11:I[4073,[],""]
:HL["/_next/static/css/635deca29fb3644e.css","style"]
:HL["/_next/static/css/e5a41a98a3e4e35c.css","style"]
0:{"P":null,"b":"H28NrEZil-ZTQL15B9zPI","p":"","c":["","interview","vue","internals"],"i":false,"f":[[["",{"children":["interview",{"children":["vue",{"children":["internals",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/635deca29fb3644e.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/e5a41a98a3e4e35c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L2"]}],{"children":["interview",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["vue",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["internals",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","div",null,{"className":"x:mx-auto x:flex x:max-w-(--nextra-content-width)","children":["$","$L5",null,{"value":[{"value":"Vue 实现双向数据绑定原理是什么","id":"vue-实现双向数据绑定原理是什么","depth":2},{"value":"Vue 的 nextTick 是如何实现的","id":"vue-的-nexttick-是如何实现的","depth":2},{"value":"Vue 的数据为什么频繁变化但只会更新一次","id":"vue-的数据为什么频繁变化但只会更新一次","depth":2},{"value":"为什么 Vue3 中去掉了 Vue 构造函数","id":"为什么-vue3-中去掉了-vue-构造函数","depth":2},{"value":"介绍一下 Vue3 内部的运行机制是怎样的","id":"介绍一下-vue3-内部的运行机制是怎样的","depth":2},{"value":"谈谈 computed 的机制，缓存了什么？为什么 computed 不支持异步？","id":"谈谈-computed-的机制缓存了什么为什么-computed-不支持异步","depth":2},{"value":"watch 和 computed 的区别是什么？说一说各自的使用场景？","id":"watch-和-computed-的区别是什么说一说各自的使用场景","depth":2}],"children":[["$","$L6",null,{}],["$","$L7",null,{"metadata":{"title":"Page","filePath":"src/app/interview/vue/internals/page.mdx","timestamp":1743915823000},"bottomContent":"$undefined","children":[["$","div",null,{"id":"nextra-skip-nav"}],["$","main",null,{"data-pagefind-body":true,"children":[["$","h2",null,{"id":"vue-实现双向数据绑定原理是什么","className":"x:tracking-tight x:text-slate-900 x:dark:text-slate-100 x:font-semibold x:target:animate-[fade-in_1.5s] x:mt-10 x:border-b x:pb-1 x:text-3xl nextra-border","children":["Vue 实现双向数据绑定原理是什么",["$","$L8",null,{"id":"vue-实现双向数据绑定原理是什么"}]]}],"\n",["$","$L9",null,{"children":[["$","summary",null,{"className":"x:focus-visible:nextra-focus x:cursor-pointer x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:select-none x:rounded x:[&::-webkit-details-marker]:hidden x:flex x:items-center","children":[["$","svg",null,{"viewBox":"0 0 24 24","stroke":"currentColor","fill":"none","strokeWidth":"3","height":"1em","className":"x:motion-reduce:transition-none x:ms-2 x:me-1 x:shrink-0 x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition","children":["$","path",null,{"d":"M9 5l7 7-7 7","strokeLinecap":"round","strokeLinejoin":"round"}]}],["$","h3",null,{"id":"$undefined","className":"x:grow x:hyphens-auto x:p-1","children":"答案"}],"$undefined"]}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"Vue2.x 采用数据劫持结合发布订阅模式（PubSub 模式）的方式，通过 Object.defineProperty 来劫持各个属性的 setter、getter，在数据变动时发布消息给订阅者，触发相应的监听回调。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"当把一个普通 Javascript 对象传给 Vue 实例来作为它的 data 选项时，Vue 将遍历它的属性，用 Object.defineProperty 将它们转为 getter/setter。用户看不到 getter/setter，但是在内部它们让 Vue 追踪依赖，在属性被访问和修改时通知变化。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"Vue 的数据双向绑定整合了 Observer，Compile 和 Watcher 三者，通过 Observer 来监听自己的 model 的数据变化，通过 Compile 来解析编译模板指令，最终利用 Watcher 搭起 Observer 和 Compile 之间的通信桥梁，达到数据变化->视图更新，视图交互变化（例如 input 操作）->数据 model 变更的双向绑定效果。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"Vue3.x 放弃了 Object.defineProperty ，使用 ES6 原生的 Proxy，来解决以前使用 Object.defineProperty 所存在的一些问题。"}]]}],"\n",["$","h2",null,{"id":"vue-的-nexttick-是如何实现的","className":"x:tracking-tight x:text-slate-900 x:dark:text-slate-100 x:font-semibold x:target:animate-[fade-in_1.5s] x:mt-10 x:border-b x:pb-1 x:text-3xl nextra-border","children":["Vue 的 nextTick 是如何实现的",["$","$L8",null,{"id":"vue-的-nexttick-是如何实现的"}]]}],"\n",["$","$L9",null,{"children":[["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":[["$","summary",null,{"className":"x:focus-visible:nextra-focus x:cursor-pointer x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:select-none x:rounded x:[&::-webkit-details-marker]:hidden x:flex x:items-center","children":[["$","svg",null,{"viewBox":"0 0 24 24","stroke":"currentColor","fill":"none","strokeWidth":"3","height":"1em","className":"x:motion-reduce:transition-none x:ms-2 x:me-1 x:shrink-0 x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition","children":["$","path",null,{"d":"M9 5l7 7-7 7","strokeLinecap":"round","strokeLinejoin":"round"}]}],["$","h3",null,{"id":"答案","className":"x:grow x:hyphens-auto x:p-1","children":"答案"}],["$","a",null,{"href":"#答案","aria-label":"Permalink for this section","className":"x:self-stretch x:flex x:items-center x:focus-visible:nextra-focus x:rounded x:px-2 x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:hover:[summary:has(&)]:bg-transparent","children":["$","svg",null,{"fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","height":"1em","className":"x:pointer-events-none","children":["$","path",null,{"strokeLinecap":"round","d":"M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244"}]}]}]]}],"\nnextTick 的本质将回调函数包装为一个微任务放入到微任务队列，这样浏览器在完成渲染任务后会优先执行微任务。\nnextTick 在 Vue2 和 Vue3 里的实现有一些不同："]}],["$","ol",null,{"className":"x:[:is(ol,ul)_&]:my-3 x:not-first:mt-6 x:list-decimal x:ms-6","children":["\n",["$","li",null,{"className":"x:my-2","children":"Vue2 为了兼容旧浏览器，会根据不同的环境选择不同包装策略："}],"\n"]}],["$","ul",null,{"className":"x:[:is(ol,ul)_&]:my-3 x:not-first:mt-6 x:list-disc x:ms-6","children":["\n",["$","li",null,{"className":"x:my-2","children":"优先使用 Promise，因为它是现代浏览器中最有效的微任务实现。"}],"\n",["$","li",null,{"className":"x:my-2","children":"如果不支持 Promise，则使用 MutationObserver，这是另一种微任务机制。"}],"\n",["$","li",null,{"className":"x:my-2","children":"在 IE 环境下，使用 setImmediate，这是一种表现接近微任务的宏任务。"}],"\n",["$","li",null,{"className":"x:my-2","children":"最后是 setTimeout(fn, 0) 作为兜底方案，这是一个宏任务，但会在下一个事件循环中尽快执行。"}],"\n"]}],["$","ol",null,{"className":"x:[:is(ol,ul)_&]:my-3 x:not-first:mt-6 x:list-decimal x:ms-6","start":"2","children":["\n",["$","li",null,{"className":"x:my-2","children":"Vue3 则是只考虑现代浏览器环境，直接使用 Promise 来实现微任务的包装，这样做的好处在于代码更加简洁，性能更高，因为不需要处理多种环境的兼容性问题。\n整体来讲，Vue3 的 nextTick 实现更加简洁和高效，是基于现代浏览器环境的优化版本，而 Vue2 则为了兼容性考虑，实现层面存在更多的兼容性代码。"}],"\n"]}]]}],"\n",["$","h2",null,{"id":"vue-的数据为什么频繁变化但只会更新一次","className":"x:tracking-tight x:text-slate-900 x:dark:text-slate-100 x:font-semibold x:target:animate-[fade-in_1.5s] x:mt-10 x:border-b x:pb-1 x:text-3xl nextra-border","children":["Vue 的数据为什么频繁变化但只会更新一次",["$","$L8",null,{"id":"vue-的数据为什么频繁变化但只会更新一次"}]]}],"\n",["$","$L9",null,{"children":[["$","summary",null,{"className":"x:focus-visible:nextra-focus x:cursor-pointer x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:select-none x:rounded x:[&::-webkit-details-marker]:hidden x:flex x:items-center","children":[["$","svg",null,{"viewBox":"0 0 24 24","stroke":"currentColor","fill":"none","strokeWidth":"3","height":"1em","className":"x:motion-reduce:transition-none x:ms-2 x:me-1 x:shrink-0 x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition","children":["$","path",null,{"d":"M9 5l7 7-7 7","strokeLinecap":"round","strokeLinejoin":"round"}]}],["$","h3",null,{"id":"$undefined","className":"x:grow x:hyphens-auto x:p-1","children":"答案"}],"$undefined"]}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"这是因为 vue 的 DOM 更新是一个异步操作，在数据更新后会首先被 set 钩子监听到，但是不会马上执行 DOM 更新，而是在下一轮循环中执行更新。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"具体实现是 vue 中实现了一个 queue 队列用于存放本次事件循环中的所有 watcher 更新，并且同一个 watcher 的更新只会被推入队列一次，并在本轮事件循环的微任务执行结束后执行此更新(UI Render 阶段)，这就是 DOM 只会更新一次的原因。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作是非常重要的。然后，在下一个的事件循环“tick”中，vue 刷新队列并执行实际 (已去重的) 工作。vue 在内部对异步队列尝试使用原生的 Promise.then、MutationObserver 和 setImmediate，如果执行环境不支持，则会采用 setTimeout(fn, 0) 代替。"}]]}],"\n",["$","h2",null,{"id":"为什么-vue3-中去掉了-vue-构造函数","className":"x:tracking-tight x:text-slate-900 x:dark:text-slate-100 x:font-semibold x:target:animate-[fade-in_1.5s] x:mt-10 x:border-b x:pb-1 x:text-3xl nextra-border","children":["为什么 Vue3 中去掉了 Vue 构造函数",["$","$L8",null,{"id":"为什么-vue3-中去掉了-vue-构造函数"}]]}],"\n",["$","$L9",null,{"children":[["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":[["$","summary",null,{"className":"x:focus-visible:nextra-focus x:cursor-pointer x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:select-none x:rounded x:[&::-webkit-details-marker]:hidden x:flex x:items-center","children":[["$","svg",null,{"viewBox":"0 0 24 24","stroke":"currentColor","fill":"none","strokeWidth":"3","height":"1em","className":"x:motion-reduce:transition-none x:ms-2 x:me-1 x:shrink-0 x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition","children":["$","path",null,{"d":"M9 5l7 7-7 7","strokeLinecap":"round","strokeLinejoin":"round"}]}],["$","h3",null,{"id":"答案-1","className":"x:grow x:hyphens-auto x:p-1","children":"答案"}],["$","a",null,{"href":"#答案-1","aria-label":"Permalink for this section","className":"x:self-stretch x:flex x:items-center x:focus-visible:nextra-focus x:rounded x:px-2 x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:hover:[summary:has(&)]:bg-transparent","children":["$","svg",null,{"fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","height":"1em","className":"x:pointer-events-none","children":["$","path",null,{"strokeLinecap":"round","d":"M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244"}]}]}]]}],"\nVue2 的全局构造函数带来了诸多问题："]}],["$","ol",null,{"className":"x:[:is(ol,ul)_&]:my-3 x:not-first:mt-6 x:list-decimal x:ms-6","children":["\n",["$","li",null,{"className":"x:my-2","children":"调用构造函数的静态方法会对所有vue应用生效，不利于隔离不同应用"}],"\n",["$","li",null,{"className":"x:my-2","children":"Vue2 的构造函数集成了太多功能，不利于 tree shaking，Vue3 把这些功能使用普通函数导出，能够充分利用 tree shaking 优化打包体积"}],"\n",["$","li",null,{"className":"x:my-2","children":"Vue2 没有把组件实例和 Vue 应用两个概念区分开，在 Vue2 中，通过 new Vue 创建的对象，既是一个 Vue 应用，同时又是一个特殊的 Vue 组件。Vue3 中，把两个概念区别开来，通过 createApp 创建的对象，是一个 Vue 应用，它内部提供的方法是针对整个应用的，而不再是一个特殊的组件。"}],"\n"]}]]}],"\n",["$","h2",null,{"id":"介绍一下-vue3-内部的运行机制是怎样的","className":"x:tracking-tight x:text-slate-900 x:dark:text-slate-100 x:font-semibold x:target:animate-[fade-in_1.5s] x:mt-10 x:border-b x:pb-1 x:text-3xl nextra-border","children":["介绍一下 Vue3 内部的运行机制是怎样的",["$","$L8",null,{"id":"介绍一下-vue3-内部的运行机制是怎样的"}]]}],"\n",["$","$L9",null,{"children":[["$","summary",null,{"className":"x:focus-visible:nextra-focus x:cursor-pointer x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:select-none x:rounded x:[&::-webkit-details-marker]:hidden x:flex x:items-center","children":[["$","svg",null,{"viewBox":"0 0 24 24","stroke":"currentColor","fill":"none","strokeWidth":"3","height":"1em","className":"x:motion-reduce:transition-none x:ms-2 x:me-1 x:shrink-0 x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition","children":["$","path",null,{"d":"M9 5l7 7-7 7","strokeLinecap":"round","strokeLinejoin":"round"}]}],["$","h3",null,{"id":"$undefined","className":"x:grow x:hyphens-auto x:p-1","children":"答案"}],"$undefined"]}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"Vue3 是一个声明式的框架。声明式的好处在于，它直接描述结果，用户不需要关注过程。Vue.js 采用模板的方式来描述 UI，但它同样支持使用虚拟 DOM 来描述 UI。虚拟 DOM 要比模板更加灵活，但模板要比虚拟 DOM 更加直观。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"当用户使用模板来描述 UI 的时候，内部的 编译器 会将其编译为渲染函数，渲染函数执行后能够确定响应式数据和渲染函数之间的依赖关系，之后响应式数据一变化，渲染函数就会重新执行。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"渲染函数执行的结果是得到虚拟 DOM，之后就需要 渲染器 来将虚拟 DOM 对象渲染为真实 DOM 元素。它的工作原理是，递归地遍历虚拟 DOM 对象，并调用原生 DOM API 来完成真实 DOM 的创建。渲染器的精髓在于后续的更新，它会通过 Diff 算法找出变更点，并且只会更新需要更新的内容。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"编译器、渲染器、响应式系统都是 Vue 内部的核心模块，它们共同构成一个有机的整体，不同模块之间互相配合，进一步提升框架性能。"}]]}],"\n",["$","h2",null,{"id":"谈谈-computed-的机制缓存了什么为什么-computed-不支持异步","className":"x:tracking-tight x:text-slate-900 x:dark:text-slate-100 x:font-semibold x:target:animate-[fade-in_1.5s] x:mt-10 x:border-b x:pb-1 x:text-3xl nextra-border","children":["谈谈 computed 的机制，缓存了什么？为什么 computed 不支持异步？",["$","$L8",null,{"id":"谈谈-computed-的机制缓存了什么为什么-computed-不支持异步"}]]}],"\n",["$","$L9",null,{"children":[["$","summary",null,{"className":"x:focus-visible:nextra-focus x:cursor-pointer x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:select-none x:rounded x:[&::-webkit-details-marker]:hidden x:flex x:items-center","children":[["$","svg",null,{"viewBox":"0 0 24 24","stroke":"currentColor","fill":"none","strokeWidth":"3","height":"1em","className":"x:motion-reduce:transition-none x:ms-2 x:me-1 x:shrink-0 x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition","children":["$","path",null,{"d":"M9 5l7 7-7 7","strokeLinecap":"round","strokeLinejoin":"round"}]}],["$","h3",null,{"id":"$undefined","className":"x:grow x:hyphens-auto x:p-1","children":"答案"}],"$undefined"]}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"缓存的是上一次 getter 计算出来的值。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"为什么 computed 不支持异步？"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"computed 属性在 Vue 中不支持异步操作的主要原因是设计上的理念和使用场景的考虑。computed 属性的初衷是用于计算并缓存一个基于响应式依赖的同步计算结果，当其依赖的响应式数据发生变化时，Vue 会自动重新计算 computed 的值，并将其缓存，以提高性能。"}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"computed 不支持异步的几个具体原因："}],["$","ul",null,{"className":"x:[:is(ol,ul)_&]:my-3 x:not-first:mt-6 x:list-disc x:ms-6","children":["\n",["$","li",null,{"className":"x:my-2","children":"缓存机制与同步计算：computed 属性的一个核心特性是缓存。当依赖的响应式数据没有变化时，computed 的计算结果会被缓存并直接返回，而不会重新执行计算。这种缓存机制是基于同步计算的，假如允许异步计算，那么在异步操作完成之前，computed 属性无法提供有效的返回值，这与它的同步缓存理念相违背。"}],"\n",["$","li",null,{"className":"x:my-2","children":"数据一致性：computed 属性通常用于模板中的绑定，它的计算结果需要在渲染期间是稳定且可用的。如果 computed 支持异步操作，渲染过程中的数据可能不一致，会导致模板渲染时无法确定使用什么数据，从而可能造成视图的闪烁或数据错误。"}],"\n",["$","li",null,{"className":"x:my-2","children":"调试与依赖追踪困难：如果 computed 属性是异步的，那么在调试和依赖追踪时就会变得非常复杂。异步操作的完成时间不确定，会使得依赖追踪的过程变得不直观，也难以预期。"}],"\n"]}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"如果需要进行异步操作，通常推荐使用 watch 来实现。"}]]}],"\n",["$","h2",null,{"id":"watch-和-computed-的区别是什么说一说各自的使用场景","className":"x:tracking-tight x:text-slate-900 x:dark:text-slate-100 x:font-semibold x:target:animate-[fade-in_1.5s] x:mt-10 x:border-b x:pb-1 x:text-3xl nextra-border","children":["watch 和 computed 的区别是什么？说一说各自的使用场景？",["$","$L8",null,{"id":"watch-和-computed-的区别是什么说一说各自的使用场景"}]]}],"\n",["$","$L9",null,{"children":[["$","summary",null,{"className":"x:focus-visible:nextra-focus x:cursor-pointer x:transition-colors x:hover:bg-gray-100 x:dark:hover:bg-neutral-800 x:select-none x:rounded x:[&::-webkit-details-marker]:hidden x:flex x:items-center","children":[["$","svg",null,{"viewBox":"0 0 24 24","stroke":"currentColor","fill":"none","strokeWidth":"3","height":"1em","className":"x:motion-reduce:transition-none x:ms-2 x:me-1 x:shrink-0 x:rtl:rotate-180 x:[[data-expanded]>summary:first-child>&]:rotate-90 x:transition","children":["$","path",null,{"d":"M9 5l7 7-7 7","strokeLinecap":"round","strokeLinejoin":"round"}]}],["$","h3",null,{"id":"$undefined","className":"x:grow x:hyphens-auto x:p-1","children":"答案"}],"$undefined"]}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"computed"}],["$","ul",null,{"className":"x:[:is(ol,ul)_&]:my-3 x:not-first:mt-6 x:list-disc x:ms-6","children":["\n",["$","li",null,{"className":"x:my-2","children":"作用：用于创建计算属性，依赖于 Vue 的响应式系统来做数据追踪。当依赖的数据发生变化时，会自动重新计算。"}],"\n",["$","li",null,{"className":"x:my-2","children":"无副作用：计算属性内部的计算应当是没有副作用的，也就是说仅仅基于数据做二次计算。"}],"\n",["$","li",null,{"className":"x:my-2","children":"缓存：计算属性具备缓存机制，如果响应式数据没变，每次获取计算属性时，内部直接返回的是上一次计算值。"}],"\n",["$","li",null,{"className":"x:my-2","children":"用处：通常用于模板当中，以便在模板中显示二次计算后的结构。"}],"\n",["$","li",null,{"className":"x:my-2","children":"同步：计算属性的一个核心特性是缓存，而这种缓存机制是基于同步计算的，假如允许异步计算，那么在异步操作完成之前，计算属性无法提供有效的返回值，这与它的缓存设计理念相违背。"}],"\n"]}],["$","p",null,{"className":"x:not-first:mt-6 x:leading-7","children":"watch"}],["$","ul",null,{"className":"x:[:is(ol,ul)_&]:my-3 x:not-first:mt-6 x:list-disc x:ms-6","children":["\n",["$","li",null,{"className":"x:my-2","children":"作用：用于监听数据的变化，可以监听一个或者多个数据，当数据发生改变时，执行一些用户指定的操作。"}],"\n",["$","li",null,{"className":"x:my-2","children":"副作用：监听器中的回调函数可以执行副作用操作，例如发送网络请求、手动操作 DOM 等。"}],"\n",["$","li",null,{"className":"x:my-2","children":"无缓存：监听器中的回调函数执行结果不会被缓存，也没办法缓存，因为不知道用户究竟要执行什么操作，有可能是包含副作用的操作，有可能是不包含副作用的操作。"}],"\n",["$","li",null,{"className":"x:my-2","children":"用处：常用于响应式数据发生变化后，重新发送网络请求，或者修改 DOM 元素等场景。"}],"\n",["$","li",null,{"className":"x:my-2","children":"支持异步：在监听到响应式数据发生变化后，可以进行同步或者异步的操作。"}],"\n"]}]]}]]}]]}]]}]}],"$undefined",null,["$","$La",null,{"children":["$Lb","$Lc",null]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","wfFeQkWYqqhcAL71O6Ud5",{"children":[["$","$Ld",null,{"children":"$Le"}],null]}],["$","$Lf",null,{"children":"$L10"}]]}],false]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:I[8738,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"ThemeConfigProvider"]
13:I[4356,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"LastUpdated"]
14:I[6400,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","585","static/chunks/585-7dfe0e01941d9669.js","848","static/chunks/848-fc7c0466fba5ed61.js","177","static/chunks/app/layout-a45833093190c33d.js"],"Search"]
15:I[6472,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","585","static/chunks/585-7dfe0e01941d9669.js","848","static/chunks/848-fc7c0466fba5ed61.js","177","static/chunks/app/layout-a45833093190c33d.js"],"ThemeProvider"]
16:I[2791,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"SkipNavLink"]
17:I[3415,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"ConfigProvider"]
18:I[563,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],""]
19:I[7573,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"ClientNavbar"]
1b:I[5790,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"Switchers"]
1c:I[8847,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"LocaleSwitch"]
1d:I[6906,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"ThemeSwitch"]
1e:I[4095,["448","static/chunks/3621f9d8-f6719145a3c21c9d.js","563","static/chunks/563-b9bc70e70665b532.js","630","static/chunks/630-69062d6bee4b07a2.js","236","static/chunks/app/interview/vue/internals/page-7dcbe141edb6e4bb.js"],"MobileNav"]
1a:T481,M12 3C7.0275 3 3 7.12937 3 12.2276C3 16.3109 5.57625 19.7597 9.15374 20.9824C9.60374 21.0631 9.77249 20.7863 9.77249 20.5441C9.77249 20.3249 9.76125 19.5982 9.76125 18.8254C7.5 19.2522 6.915 18.2602 6.735 17.7412C6.63375 17.4759 6.19499 16.6569 5.8125 16.4378C5.4975 16.2647 5.0475 15.838 5.80124 15.8264C6.51 15.8149 7.01625 16.4954 7.18499 16.7723C7.99499 18.1679 9.28875 17.7758 9.80625 17.5335C9.885 16.9337 10.1212 16.53 10.38 16.2993C8.3775 16.0687 6.285 15.2728 6.285 11.7432C6.285 10.7397 6.63375 9.9092 7.20749 9.26326C7.1175 9.03257 6.8025 8.08674 7.2975 6.81794C7.2975 6.81794 8.05125 6.57571 9.77249 7.76377C10.4925 7.55615 11.2575 7.45234 12.0225 7.45234C12.7875 7.45234 13.5525 7.55615 14.2725 7.76377C15.9937 6.56418 16.7475 6.81794 16.7475 6.81794C17.2424 8.08674 16.9275 9.03257 16.8375 9.26326C17.4113 9.9092 17.76 10.7281 17.76 11.7432C17.76 15.2843 15.6563 16.0687 13.6537 16.2993C13.98 16.5877 14.2613 17.1414 14.2613 18.0065C14.2613 19.2407 14.25 20.2326 14.25 20.5441C14.25 20.7863 14.4188 21.0746 14.8688 20.9824C16.6554 20.364 18.2079 19.1866 19.3078 17.6162C20.4077 16.0457 20.9995 14.1611 21 12.2276C21 7.12937 16.9725 3 12 3Z2:["$","html",null,{"lang":"en","dir":"ltr","suppressHydrationWarning":true,"children":["$","body",null,{"children":["$","$L12",null,{"value":{"darkMode":true,"docsRepositoryBase":"https://github.com/fecosmos/fecosmos.github.io/tree/master","editLink":"Edit this page","feedback":{"content":"Question? Give us feedback","labels":"feedback"},"i18n":[],"lastUpdated":["$","$L13",null,{}],"navigation":{"next":true,"prev":true},"search":["$","$L14",null,{}],"sidebar":{"defaultMenuCollapseLevel":1,"defaultOpen":true,"toggleButton":true},"themeSwitch":{"dark":"Dark","light":"Light","system":"System"},"toc":{"backToTop":"Scroll to top","float":true,"title":"On This Page"}},"children":["$","$L15",null,{"attribute":"class","disableTransitionOnChange":true,"children":[["$","$L16",null,{}],"$undefined",["$","$L17",null,{"pageMap":[{"data":{"index":{"type":"page","display":"hidden"},"docs":{"type":"page","title":"文档"},"interview":{"type":"page","title":"面试题"},"about":{"type":"page","title":"About","theme":{"typesetting":"article"}}}},{"name":"index","route":"/","frontMatter":"$undefined","title":"Index"},{"name":"docs","route":"/docs","children":[{"name":"index","route":"/docs","frontMatter":{"title":"Introduction","filePath":"src/app/docs/page.mdx","timestamp":1743915823000},"title":"Introduction"},{"name":"next","route":"/docs/next","frontMatter":{"title":"搭建 next 项目","filePath":"src/app/docs/next/page.md","timestamp":1743915823000},"title":"搭建 next 项目"},{"name":"webpack","route":"/docs/webpack","children":[{"name":"start","route":"/docs/webpack/start","frontMatter":{"title":"从零搭建一个 Webpack 项目","filePath":"src/app/docs/webpack/start/page.mdx","timestamp":1743915823000},"title":"从零搭建一个 Webpack 项目"}],"title":"Webpack"}],"title":"文档"},{"name":"interview","route":"/interview","children":[{"data":{"es6":{"title":"ES6"},"typescript":{"title":"TypeScript"},"vue":{"title":"Vue"},"engineering":{"title":"前端工程化"},"event-loop":{"title":"事件循环"},"http":{"title":"HTTP"}}},{"name":"es6","route":"/interview/es6","frontMatter":{"title":"ES6","filePath":"src/app/interview/es6/page.md","timestamp":1743915823000},"title":"ES6"},{"name":"typescript","route":"/interview/typescript","frontMatter":{"title":"Typescript","filePath":"src/app/interview/typescript/page.md","timestamp":1743915823000},"title":"TypeScript"},{"name":"vue","route":"/interview/vue","children":[{"data":{"usage":{"title":"Vue的使用"},"internals":{"title":"核心原理"}}},{"name":"usage","route":"/interview/vue/usage","frontMatter":{"title":"Page","filePath":"src/app/interview/vue/usage/page.mdx","timestamp":1743915823000},"title":"Vue的使用"},{"name":"internals","route":"/interview/vue/internals","frontMatter":{"title":"Page","filePath":"src/app/interview/vue/internals/page.mdx","timestamp":1743915823000},"title":"核心原理"}],"title":"Vue"},{"name":"engineering","route":"/interview/engineering","children":[{"name":"index","route":"/interview/engineering","frontMatter":{"title":"前端工程化","filePath":"src/app/interview/engineering/page.mdx","timestamp":1743915823000},"title":"前端工程化"},{"name":"webpack","route":"/interview/engineering/webpack","frontMatter":{"title":"Webpack","filePath":"src/app/interview/engineering/webpack/page.md","timestamp":1743915823000},"title":"Webpack"}],"title":"前端工程化"},{"name":"event-loop","route":"/interview/event-loop","frontMatter":{"title":"Event Loop","filePath":"src/app/interview/event-loop/page.md","timestamp":1743915823000},"title":"事件循环"},{"name":"http","route":"/interview/http","frontMatter":{"title":"Http","filePath":"src/app/interview/http/page.mdx","timestamp":1743915823000},"title":"HTTP"}],"title":"面试题"},{"name":"about","route":"/about","frontMatter":{"title":"关于","filePath":"src/app/about/page.mdx","timestamp":1743915823000},"title":"About"}],"navbar":["$","header",null,{"className":"nextra-navbar x:sticky x:top-0 x:z-30 x:w-full x:bg-transparent x:print:hidden x:max-md:[.nextra-banner:not([class$=hidden])~&]:top-(--nextra-banner-height)","children":[["$","div",null,{"className":"nextra-navbar-blur x:absolute x:-z-1 x:size-full nextra-border x:border-b x:backdrop-blur-md x:bg-nextra-bg/70"}],["$","nav",null,{"style":{"height":"var(--nextra-navbar-height)"},"className":"x:mx-auto x:flex x:max-w-(--nextra-content-width) x:items-center x:gap-4 x:pl-[max(env(safe-area-inset-left),1.5rem)] x:pr-[max(env(safe-area-inset-right),1.5rem)] x:justify-end","children":[["$","$L18",null,{"href":"/","className":"x:flex x:items-center x:me-auto x:transition-opacity x:focus-visible:nextra-focus x:hover:opacity-75","children":["$","span",null,{"className":"font-bold text-xl","children":"Fecosmos"}]}],["$","$L19",null,{"className":"","children":[["$","a",null,{"href":"https://github.com/fecosmos/fecosmos.github.io","target":"_blank","rel":"noreferrer","children":[["$","svg",null,{"fill":"currentColor","viewBox":"3 3 18 18","height":"24","children":["$","path",null,{"d":"$1a"}]}],false],"className":"x:focus-visible:nextra-focus"}],"$undefined","$undefined"]}]]}]]}],"footer":["$","div",null,{"className":"x:bg-gray-100 x:pb-[env(safe-area-inset-bottom)] x:dark:bg-neutral-900 x:print:bg-transparent","children":[["$","$L1b",null,{"children":["$","div",null,{"className":"x:mx-auto x:flex x:max-w-(--nextra-content-width) x:gap-2 x:py-2 x:px-4","children":[["$","$L1c",null,{}],["$","$L1d",null,{}]]}]}],["$","hr",null,{"className":"nextra-border"}],["$","footer",null,{"className":"x:mx-auto x:flex x:max-w-(--nextra-content-width) x:justify-center x:py-12 x:text-gray-600 x:dark:text-gray-400 x:md:justify-start x:pl-[max(env(safe-area-inset-left),1.5rem)] x:pr-[max(env(safe-area-inset-right),1.5rem)]","children":["MIT ",2025," © Shibin."]}]]}],"children":[["$","$L1e",null,{}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]]}]}]}]}]
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:null
c:null
10:[["$","title","0",{"children":"Page"}],["$","link","1",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
